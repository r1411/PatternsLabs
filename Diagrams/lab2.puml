@startuml
'https://plantuml.com/class-diagram

DataList ..> DataTable

abstract class StudentBase {
    -id: Integer
    -phone: String
    -telegram: String
    -email: String
    -git: String
    --
    +{static}valid_name?(String): Boolean
    +{static}valid_phone?(String): Boolean
    +{static}valid_profile_name?(String): Boolean
    +{static}valid_email?(String): Boolean
    -initialize(Hash)
    +short_contact(): String
    +has_contacts?(): Boolean
    +has_git?(): Boolean
    +valid?(): Boolean
    .. Геттеры ..
    +id(): Integer
    +git(): String
    #phone(): String
    #telegram(): String
    #email(): String
    .. Сеттеры ..
    #id=(Integer)
    #git=(String)
    #phone=(String)
    #telegram=(String)
    #email=(String)
}

class Student extends StudentBase {
    -last_name: String
    -first_name: String
    -father_name: String
    --
    +{static}from_json_str(String): Student
    +initialize(String, String, String, Hash)
    +set_contacts(Hash)
    +last_name_and_initials(): String
    +short_info(): String
    +to_s(): String
    +to_json_str(): String
    .. Геттеры ..
    +phone(): String
    +telegram(): String
    +email(): String
    +last_name(): String
    +first_name(): String
    +father_name(): String
    .. Сеттеры ..
    +id=(Integer)
    +git=(String)
    +phone=(String)
    +telegram=(String)
    +email=(String)
    +last_name=(String)
    +first_name=(String)
    +father_name=(String)
}

class ShortStudent extends StudentBase {
    -last_name_and_initials: String
    -contact: Hash
    --
    +{static}from_student(Student): ShortStudent
    +initialize(Integer, String)
    +to_s(): String
    .. Геттеры ..
    +last_name_and_initials(): String
    +contact(): Hash
    .. Сеттеры ..
    -last_name_and_initials=(String)
    -contact=(Hash)
}

class DataTable {
    -table: Array
    -rows_count: Integer
    -cols_count: Integer
    --
    +initialize(Array)
    +get_item(Integer, Integer): String
    .. Геттеры ..
    +rows_count(): Integer
    +cols_count(): Integer
    -table(): Array
    .. Сеттеры ..
    -rows_count=(Integer)
    -cols_count=(Integer)
    -table=(Array)
}

abstract class DataList {
    -objects
    -selected_num
    --
    -initialize(Array)
    +select_element(Integer)
    +column_names(): Array
    +data_table(): DataTable
    +selected_id(): Integer
    #table_fields(Object): Array
    .. Геттеры ..
    -selected_num(): Integer
    -objects(): Array
    .. Сеттеры ..
    -selected_num=(Integer)
    -objects=(Array)
}

class DataListStudentShort extends DataList {
    --
    +initialize(Array)
    +column_names(): Array
    #table_fields(StudentShort): Array
}

@enduml