var search_data = {"index":{"searchIndex":["dbdatasource","dbsourceadapter","datalist","dataliststudentshort","datatable","datatransformerbase","datatransformerjson","datatransformeryaml","filedatasource","filesourceadapter","loggerholder","mainwindow","student","studentbase","studentinputform","studentinputformcontrollercreate","studentinputformcontrolleredit","studentrepository","studentshort","tabstudents","tabstudentscontroller","add_listener()","add_student()","add_student()","add_student()","add_student()","close()","column_names()","column_names()","contact_color()","create()","create()","create()","data_table()","delete_selected()","email=()","father_name=()","first_name=()","from_hash()","from_json_str()","from_student()","get_item()","git=()","has_contacts?()","has_git?()","hash_list_to_str()","hash_list_to_str()","hash_list_to_str()","instance()","instance()","last_name=()","last_name_and_initials()","load_from_file()","make_readonly()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","notify()","on_create()","on_create()","on_datalist_changed()","on_view_created()","on_view_created()","on_view_created()","paginated_short_students()","paginated_short_students()","paginated_short_students()","paginated_short_students()","phone=()","populate_fields()","prepare_exec()","process_fields()","process_fields()","query()","refresh_data()","remove_listener()","remove_student()","remove_student()","remove_student()","remove_student()","replace_objects()","replace_student()","replace_student()","replace_student()","replace_student()","save_to_file()","select_element()","selected_id()","set_contacts()","set_value()","set_view()","set_view()","short_contact()","short_info()","show_modal_add()","show_modal_edit()","sorted()","str_to_hash_list()","str_to_hash_list()","str_to_hash_list()","student_by_id()","student_by_id()","student_by_id()","student_by_id()","student_count()","student_count()","student_count()","student_count()","table_fields()","table_fields()","telegram=()","to_2d_array()","to_hash()","to_json_str()","to_s()","to_s()","to_s()","update_student_count()","valid?()","valid_email?()","valid_name?()","valid_phone?()","valid_profile_name?()"],"longSearchIndex":["dbdatasource","dbsourceadapter","datalist","dataliststudentshort","datatable","datatransformerbase","datatransformerjson","datatransformeryaml","filedatasource","filesourceadapter","loggerholder","mainwindow","student","studentbase","studentinputform","studentinputformcontrollercreate","studentinputformcontrolleredit","studentrepository","studentshort","tabstudents","tabstudentscontroller","datalist#add_listener()","dbsourceadapter#add_student()","filedatasource#add_student()","filesourceadapter#add_student()","studentrepository#add_student()","studentinputform#close()","datalist#column_names()","dataliststudentshort#column_names()","tabstudents#contact_color()","mainwindow#create()","studentinputform#create()","tabstudents#create()","datalist#data_table()","tabstudentscontroller#delete_selected()","studentbase#email=()","student#father_name=()","student#first_name=()","student::from_hash()","student::from_json_str()","studentshort::from_student()","datatable#get_item()","studentbase#git=()","studentbase#has_contacts?()","studentbase#has_git?()","datatransformerbase#hash_list_to_str()","datatransformerjson#hash_list_to_str()","datatransformeryaml#hash_list_to_str()","dbdatasource::instance()","loggerholder::instance()","student#last_name=()","student#last_name_and_initials()","filedatasource#load_from_file()","studentinputform#make_readonly()","dbdatasource::new()","dbsourceadapter::new()","datalist::new()","dataliststudentshort::new()","datatable::new()","filedatasource::new()","filesourceadapter::new()","loggerholder::new()","mainwindow::new()","student::new()","studentbase::new()","studentinputform::new()","studentinputformcontrollercreate::new()","studentinputformcontrolleredit::new()","studentrepository::new()","studentshort::new()","studentshort::new()","tabstudents::new()","tabstudentscontroller::new()","datalist#notify()","studentinputform#on_create()","tabstudents#on_create()","tabstudents#on_datalist_changed()","studentinputformcontrollercreate#on_view_created()","studentinputformcontrolleredit#on_view_created()","tabstudentscontroller#on_view_created()","dbsourceadapter#paginated_short_students()","filedatasource#paginated_short_students()","filesourceadapter#paginated_short_students()","studentrepository#paginated_short_students()","studentbase#phone=()","studentinputformcontrolleredit#populate_fields()","dbdatasource#prepare_exec()","studentinputformcontrollercreate#process_fields()","studentinputformcontrolleredit#process_fields()","dbdatasource#query()","tabstudentscontroller#refresh_data()","datalist#remove_listener()","dbsourceadapter#remove_student()","filedatasource#remove_student()","filesourceadapter#remove_student()","studentrepository#remove_student()","datalist#replace_objects()","dbsourceadapter#replace_student()","filedatasource#replace_student()","filesourceadapter#replace_student()","studentrepository#replace_student()","filedatasource#save_to_file()","datalist#select_element()","datalist#selected_id()","student#set_contacts()","studentinputform#set_value()","studentinputformcontrollercreate#set_view()","studentinputformcontrolleredit#set_view()","studentbase#short_contact()","student#short_info()","tabstudentscontroller#show_modal_add()","tabstudentscontroller#show_modal_edit()","filedatasource#sorted()","datatransformerbase#str_to_hash_list()","datatransformerjson#str_to_hash_list()","datatransformeryaml#str_to_hash_list()","dbsourceadapter#student_by_id()","filedatasource#student_by_id()","filesourceadapter#student_by_id()","studentrepository#student_by_id()","dbsourceadapter#student_count()","filedatasource#student_count()","filesourceadapter#student_count()","studentrepository#student_count()","datalist#table_fields()","dataliststudentshort#table_fields()","studentbase#telegram=()","datatable#to_2d_array()","student#to_hash()","student#to_json_str()","datatable#to_s()","student#to_s()","studentshort#to_s()","tabstudents#update_student_count()","studentbase#valid?()","studentbase::valid_email?()","studentbase::valid_name?()","studentbase::valid_phone?()","studentbase::valid_profile_name?()"],"info":[["DBDataSource","","DBDataSource.html","","<p>Источник данных из БД\n"],["DBSourceAdapter","","DBSourceAdapter.html","",""],["DataList","","DataList.html","",""],["DataListStudentShort","","DataListStudentShort.html","",""],["DataTable","","DataTable.html","",""],["DataTransformerBase","","DataTransformerBase.html","",""],["DataTransformerJSON","","DataTransformerJSON.html","",""],["DataTransformerYAML","","DataTransformerYAML.html","",""],["FileDataSource","","FileDataSource.html","","<p>Источник данных из файла\n"],["FileSourceAdapter","","FileSourceAdapter.html","",""],["LoggerHolder","","LoggerHolder.html","","<p>Обертка для хранения объекта Logger\n"],["MainWindow","","MainWindow.html","",""],["Student","","Student.html","","<p>Модель студента\n"],["StudentBase","","StudentBase.html","","<p>Абстрактный класс с базовым описанием студента\n"],["StudentInputForm","","StudentInputForm.html","",""],["StudentInputFormControllerCreate","","StudentInputFormControllerCreate.html","","<p>Контроллер для модального окна создания студента\n"],["StudentInputFormControllerEdit","","StudentInputFormControllerEdit.html","","<p>Контроллер для модального окна изменения студента\n"],["StudentRepository","","StudentRepository.html","","<p>Репозиторий студентов с CRUD операциями.\n"],["StudentShort","","StudentShort.html","","<p>Модель с краткой информацией о студенте\n"],["TabStudents","","TabStudents.html","",""],["TabStudentsController","","TabStudentsController.html","","<p>Контроллер для вкладки со списком студентов\n"],["add_listener","DataList","DataList.html#method-i-add_listener","(listener)",""],["add_student","DBSourceAdapter","DBSourceAdapter.html#method-i-add_student","(student)",""],["add_student","FileDataSource","FileDataSource.html#method-i-add_student","(student)",""],["add_student","FileSourceAdapter","FileSourceAdapter.html#method-i-add_student","(student)",""],["add_student","StudentRepository","StudentRepository.html#method-i-add_student","(student)",""],["close","StudentInputForm","StudentInputForm.html#method-i-close","()",""],["column_names","DataList","DataList.html#method-i-column_names","()","<p>Имена атрибутов объектов по порядку. Переопределить в наследниках\n"],["column_names","DataListStudentShort","DataListStudentShort.html#method-i-column_names","()","<p>Делаем приватный new предка публичным\n"],["contact_color","TabStudents","TabStudents.html#method-i-contact_color","(type)",""],["create","MainWindow","MainWindow.html#method-i-create","()",""],["create","StudentInputForm","StudentInputForm.html#method-i-create","()",""],["create","TabStudents","TabStudents.html#method-i-create","()",""],["data_table","DataList","DataList.html#method-i-data_table","()","<p>Получить DataTable со всеми элементами.\n"],["delete_selected","TabStudentsController","TabStudentsController.html#method-i-delete_selected","(current_page, per_page, selected_row)","<p>Удалить выбранного студента\n"],["email=","StudentBase","StudentBase.html#method-i-email-3D","(new_email)",""],["father_name=","Student","Student.html#method-i-father_name-3D","(new_father_name)",""],["first_name=","Student","Student.html#method-i-first_name-3D","(new_first_name)",""],["from_hash","Student","Student.html#method-c-from_hash","(hash)","<p>Конструктор из Hash. Ключи являются символами\n"],["from_json_str","Student","Student.html#method-c-from_json_str","(str)","<p>Конструктор из JSON строки\n"],["from_student","StudentShort","StudentShort.html#method-c-from_student","(student)","<p>Конструктор из объекта класса Student\n"],["get_item","DataTable","DataTable.html#method-i-get_item","(row, col)","<p>Получить значение в ячейке [row, col]\n"],["git=","StudentBase","StudentBase.html#method-i-git-3D","(new_git)",""],["has_contacts?","StudentBase","StudentBase.html#method-i-has_contacts-3F","()","<p>Возвращает true, если у студента есть хотя бы один из контактов\n"],["has_git?","StudentBase","StudentBase.html#method-i-has_git-3F","()","<p>Возвращает true, если у студента есть гит\n"],["hash_list_to_str","DataTransformerBase","DataTransformerBase.html#method-i-hash_list_to_str","(hash_list)",""],["hash_list_to_str","DataTransformerJSON","DataTransformerJSON.html#method-i-hash_list_to_str","(hash_list)",""],["hash_list_to_str","DataTransformerYAML","DataTransformerYAML.html#method-i-hash_list_to_str","(hash_list)",""],["instance","DBDataSource","DBDataSource.html#method-c-instance","()",""],["instance","LoggerHolder","LoggerHolder.html#method-c-instance","()",""],["last_name=","Student","Student.html#method-i-last_name-3D","(new_last_name)",""],["last_name_and_initials","Student","Student.html#method-i-last_name_and_initials","()","<p>Вернуть фамилию и инициалы в виде строки “Фамилия И. О.”\n"],["load_from_file","FileDataSource","FileDataSource.html#method-i-load_from_file","(file_path)",""],["make_readonly","StudentInputForm","StudentInputForm.html#method-i-make_readonly","(*fields)",""],["new","DBDataSource","DBDataSource.html#method-c-new","()",""],["new","DBSourceAdapter","DBSourceAdapter.html#method-c-new","()",""],["new","DataList","DataList.html#method-c-new","(objects)","<p>Конструктор, принимает массив любых объектов\n"],["new","DataListStudentShort","DataListStudentShort.html#method-c-new","(objects)","<p>Конструктор, принимает массив любых объектов\n"],["new","DataTable","DataTable.html#method-c-new","(table)","<p>Конструктор, принимает 2D Array\n"],["new","FileDataSource","FileDataSource.html#method-c-new","(data_transformer)",""],["new","FileSourceAdapter","FileSourceAdapter.html#method-c-new","(data_transformer, file_path)",""],["new","LoggerHolder","LoggerHolder.html#method-c-new","()",""],["new","MainWindow","MainWindow.html#method-c-new","()",""],["new","Student","Student.html#method-c-new","(last_name, first_name, father_name, **options)","<p>Стандартный конструктор. Принимает: Фамилия, Имя, Отчество, а также именованные параметры для предка …\n"],["new","StudentBase","StudentBase.html#method-c-new","(id: nil, phone: nil, telegram: nil, email: nil, git: nil)","<p>Стандартный конструктор. Принимает именованные параметры: id - Id студента phone - Телефон telegram - …\n"],["new","StudentInputForm","StudentInputForm.html#method-c-new","(controller, existing_student = nil)",""],["new","StudentInputFormControllerCreate","StudentInputFormControllerCreate.html#method-c-new","(parent_controller)",""],["new","StudentInputFormControllerEdit","StudentInputFormControllerEdit.html#method-c-new","(parent_controller, existing_student_id)",""],["new","StudentRepository","StudentRepository.html#method-c-new","(data_source_adapter)",""],["new","StudentShort","StudentShort.html#method-c-new","(id, info_str)","<p>Стандартный конструктор. Принимает: id - Числовой id студента info_str - JSON строка с полями last_name_and_initials …\n"],["new","StudentShort","StudentShort.html#method-c-new","(id: nil, phone: nil, telegram: nil, email: nil, git: nil)","<p>Стандартный конструктор. Принимает именованные параметры: id - Id студента phone - Телефон telegram - …\n"],["new","TabStudents","TabStudents.html#method-c-new","()",""],["new","TabStudentsController","TabStudentsController.html#method-c-new","(view)",""],["notify","DataList","DataList.html#method-i-notify","()",""],["on_create","StudentInputForm","StudentInputForm.html#method-i-on_create","()",""],["on_create","TabStudents","TabStudents.html#method-i-on_create","()",""],["on_datalist_changed","TabStudents","TabStudents.html#method-i-on_datalist_changed","(new_table)","<p>Метод наблюдателя datalist\n"],["on_view_created","StudentInputFormControllerCreate","StudentInputFormControllerCreate.html#method-i-on_view_created","()","<p>Вызывается из view после ее создания\n"],["on_view_created","StudentInputFormControllerEdit","StudentInputFormControllerEdit.html#method-i-on_view_created","()","<p>Вызывается из view после ее создания\n"],["on_view_created","TabStudentsController","TabStudentsController.html#method-i-on_view_created","()","<p>Вызывается из view после ее создания\n"],["paginated_short_students","DBSourceAdapter","DBSourceAdapter.html#method-i-paginated_short_students","(page, count, existing_data_list = nil)",""],["paginated_short_students","FileDataSource","FileDataSource.html#method-i-paginated_short_students","(page, count, existing_data_list = nil)",""],["paginated_short_students","FileSourceAdapter","FileSourceAdapter.html#method-i-paginated_short_students","(page, count, existing_data_list = nil)",""],["paginated_short_students","StudentRepository","StudentRepository.html#method-i-paginated_short_students","(page, count, existing_data_list = nil)","<p>Получить page по счету count элементов (страница начинается с 1)\n"],["phone=","StudentBase","StudentBase.html#method-i-phone-3D","(new_phone)",""],["populate_fields","StudentInputFormControllerEdit","StudentInputFormControllerEdit.html#method-i-populate_fields","(student)","<p>Заполнить имеющиеся данные о студенте\n"],["prepare_exec","DBDataSource","DBDataSource.html#method-i-prepare_exec","(statement, *params)",""],["process_fields","StudentInputFormControllerCreate","StudentInputFormControllerCreate.html#method-i-process_fields","(fields)","<p>Обработать данные из полей и добавить студента\n"],["process_fields","StudentInputFormControllerEdit","StudentInputFormControllerEdit.html#method-i-process_fields","(fields)","<p>Обработать данные из полей и добавить студента\n"],["query","DBDataSource","DBDataSource.html#method-i-query","(statement)",""],["refresh_data","TabStudentsController","TabStudentsController.html#method-i-refresh_data","(page, per_page)","<p>Обновить данные в таблице студентов\n"],["remove_listener","DataList","DataList.html#method-i-remove_listener","(listener)",""],["remove_student","DBSourceAdapter","DBSourceAdapter.html#method-i-remove_student","(student_id)",""],["remove_student","FileDataSource","FileDataSource.html#method-i-remove_student","(student_id)",""],["remove_student","FileSourceAdapter","FileSourceAdapter.html#method-i-remove_student","(student_id)",""],["remove_student","StudentRepository","StudentRepository.html#method-i-remove_student","(student_id)",""],["replace_objects","DataList","DataList.html#method-i-replace_objects","(objects)","<p>Добавить элементы в конец списка\n"],["replace_student","DBSourceAdapter","DBSourceAdapter.html#method-i-replace_student","(student_id, student)",""],["replace_student","FileDataSource","FileDataSource.html#method-i-replace_student","(student_id, student)",""],["replace_student","FileSourceAdapter","FileSourceAdapter.html#method-i-replace_student","(student_id, student)",""],["replace_student","StudentRepository","StudentRepository.html#method-i-replace_student","(student_id, student)",""],["save_to_file","FileDataSource","FileDataSource.html#method-i-save_to_file","(file_path)",""],["select_element","DataList","DataList.html#method-i-select_element","(number)","<p>Выбрать элемент по номеру\n"],["selected_id","DataList","DataList.html#method-i-selected_id","()",""],["set_contacts","Student","Student.html#method-i-set_contacts","(phone: nil, telegram: nil, email: nil)","<p>Сеттер для массовой установки контактов\n"],["set_value","StudentInputForm","StudentInputForm.html#method-i-set_value","(field, value)",""],["set_view","StudentInputFormControllerCreate","StudentInputFormControllerCreate.html#method-i-set_view","(view)",""],["set_view","StudentInputFormControllerEdit","StudentInputFormControllerEdit.html#method-i-set_view","(view)",""],["short_contact","StudentBase","StudentBase.html#method-i-short_contact","()","<p>Возвращает первый доступный контакт пользователя в виде хеша. Пример: {type: :telegram, value: ‘xoxolovelylove’} …\n"],["short_info","Student","Student.html#method-i-short_info","()","<p>Краткая информация о пользователе в виде JSON строки. Поля: last_name_and_initials - Фамилия и инициалы …\n"],["show_modal_add","TabStudentsController","TabStudentsController.html#method-i-show_modal_add","()","<p>Показать модальное окно с добавлением студента\n"],["show_modal_edit","TabStudentsController","TabStudentsController.html#method-i-show_modal_edit","(current_page, per_page, selected_row)","<p>Показать модальное окно с изменением выделенного студента\n"],["sorted","FileDataSource","FileDataSource.html#method-i-sorted","()",""],["str_to_hash_list","DataTransformerBase","DataTransformerBase.html#method-i-str_to_hash_list","(str)",""],["str_to_hash_list","DataTransformerJSON","DataTransformerJSON.html#method-i-str_to_hash_list","(str)",""],["str_to_hash_list","DataTransformerYAML","DataTransformerYAML.html#method-i-str_to_hash_list","(str)",""],["student_by_id","DBSourceAdapter","DBSourceAdapter.html#method-i-student_by_id","(student_id)",""],["student_by_id","FileDataSource","FileDataSource.html#method-i-student_by_id","(student_id)",""],["student_by_id","FileSourceAdapter","FileSourceAdapter.html#method-i-student_by_id","(student_id)",""],["student_by_id","StudentRepository","StudentRepository.html#method-i-student_by_id","(student_id)",""],["student_count","DBSourceAdapter","DBSourceAdapter.html#method-i-student_count","()",""],["student_count","FileDataSource","FileDataSource.html#method-i-student_count","()",""],["student_count","FileSourceAdapter","FileSourceAdapter.html#method-i-student_count","()",""],["student_count","StudentRepository","StudentRepository.html#method-i-student_count","()",""],["table_fields","DataList","DataList.html#method-i-table_fields","(_obj)","<p>Список значений полей для DataTable. Переопределить в наследниках\n"],["table_fields","DataListStudentShort","DataListStudentShort.html#method-i-table_fields","(obj)",""],["telegram=","StudentBase","StudentBase.html#method-i-telegram-3D","(new_telegram)",""],["to_2d_array","DataTable","DataTable.html#method-i-to_2d_array","()",""],["to_hash","Student","Student.html#method-i-to_hash","()","<p>Преобразование студента в хеш. Поля являются ключами\n"],["to_json_str","Student","Student.html#method-i-to_json_str","()","<p>Преобразование студента в JSON строку.\n"],["to_s","DataTable","DataTable.html#method-i-to_s","()",""],["to_s","Student","Student.html#method-i-to_s","()","<p>Преобразование студента в строку\n"],["to_s","StudentShort","StudentShort.html#method-i-to_s","()","<p>Преобразование объекта в строку\n"],["update_student_count","TabStudents","TabStudents.html#method-i-update_student_count","(new_cnt)",""],["valid?","StudentBase","StudentBase.html#method-i-valid-3F","()","<p>Возвращает true, если у студента есть хотя бы один из контактов и гит\n"],["valid_email?","StudentBase","StudentBase.html#method-c-valid_email-3F","(email)","<p>Валидация email\n"],["valid_name?","StudentBase","StudentBase.html#method-c-valid_name-3F","(name)","<p>Валидация имени (также применимо к фамилии и отчеству)\n"],["valid_phone?","StudentBase","StudentBase.html#method-c-valid_phone-3F","(phone)","<p>Валидация номера телефона\n"],["valid_profile_name?","StudentBase","StudentBase.html#method-c-valid_profile_name-3F","(profile_name)","<p>Валидация имени профиля пользователя\n"]]}}